<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XML Spy v4.1 U (http://www.xmlspy.com) by czq (sz) -->
<xs:schema targetNamespace="http://www.webex.com/schemas/testtools" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:test="http://www.webex.com/schemas/testtools" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:complexType name="ExceptionType">
		<xs:sequence>
			<xs:element name="type" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ScriptType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="type" type="xs:string"/>
			<xs:element name="description" type="xs:string"/>
			<xs:element name="action" type="test:ScriptActionType"/>
			<xs:element name="accessMethod" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TestCaseType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="description" type="xs:string" minOccurs="0"/>
			<xs:element name="globalDeclare" type="test:DeclareType" minOccurs="0"/>
			<xs:element name="preCondition" type="test:TestCasePreConditionType" minOccurs="0"/>
			<xs:element name="process" type="test:TestCaseProcessType" minOccurs="0"/>
			<xs:element name="verify" type="test:TestCaseVerifyType" minOccurs="0"/>
			<xs:element name="robot" type="test:robotType" minOccurs="0"/>
			<xs:element name="postCondition" type="test:TestCasePostConditionType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="RuntimeType"/>
	<xs:complexType name="TestCaseRuntimeDescriptionType">
		<xs:sequence>
			<xs:element name="testCaseID" type="xs:int"/>
			<xs:element name="testCaseName" type="xs:string"/>
			<xs:element name="parameterMappings" type="test:ParameterMappingsType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TestTaskRuntimeDescriptionType">
		<xs:sequence>
			<xs:element name="testTaskID" type="xs:int"/>
			<xs:element name="testTaskName" type="xs:string"/>
			<xs:element name="testSuite" type="test:TestSuiteRuntimeDescriptionType" maxOccurs="unbounded"/>
			<xs:element name="startTime" type="xs:string"/>
			<xs:element name="webExID" type="xs:string"/>
			<xs:element name="password" type="xs:string"/>
			<xs:element name="siteID" type="xs:string"/>
			<xs:element name="partnerID" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TestSuiteRuntimeDescriptionType">
		<xs:sequence>
			<xs:element name="testSuiteName" type="xs:string"/>
			<xs:element name="testCase" type="test:TestCaseRuntimeDescriptionType" maxOccurs="unbounded"/>
			<xs:element name="testSuiteID" type="xs:int"/>
			<xs:element name="webExID" type="xs:string"/>
			<xs:element name="password" type="xs:string"/>
			<xs:element name="siteID" type="xs:string"/>
			<xs:element name="partnerID" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TestSuiteType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="description" type="xs:string"/>
			<xs:element name="testCase" type="test:TestCaseType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TestTaskType">
		<xs:sequence>
			<xs:element name="Name" type="xs:string"/>
			<xs:element name="description" type="xs:string" minOccurs="0"/>
			<xs:element name="TestSuite" type="test:TestSuiteType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ScriptActionType">
		<xs:sequence>
			<xs:element name="actionName" type="xs:string"/>
			<xs:element name="parameters">
				<xs:complexType>
					<xs:sequence maxOccurs="unbounded">
						<xs:element name="parameter" type="test:ParameterType"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="result" type="test:ResultType"/>
			<xs:element name="exception" type="test:ExceptionType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ActionTargetType">
		<xs:sequence>
			<xs:element name="className" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ParameterType">
		<xs:sequence>
			<xs:element name="type" type="xs:string"/>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="instance" type="xs:string"/>
			<xs:element name="position" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ResultType">
		<xs:sequence>
			<xs:element name="type" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TestCasePreConditionType">
		<xs:sequence>
			<xs:element name="initUnit" type="test:PerformType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TestCaseProcessType">
		<xs:sequence minOccurs="0">
			<xs:element name="processUnit" type="test:PerformType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TestCaseVerifyType">
		<xs:sequence minOccurs="0">
			<xs:element name="verifyUnit" type="test:PerformType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="acceptResult" type="test:VerifyType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TestCasePostConditionType">
		<xs:sequence>
			<xs:element name="cleanupUnit" type="test:PerformType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VariableType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="dataType" type="xs:string"/>
			<xs:element name="value" type="test:ValueSourceType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ValueSourceType">
		<xs:sequence>
			<xs:element name="type">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="MANUAL"/>
						<xs:enumeration value="AUTO"/>
						<xs:enumeration value="PROGRAM"/>
						<xs:enumeration value="REFERENCE"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="express" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PerformType">
		<xs:sequence>
			<xs:element name="declare" type="test:DeclareType"/>
			<xs:element name="scriptName" type="xs:string"/>
			<xs:element name="returnName" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="VerifyType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="value" type="xs:string"/>
			<xs:element name="comparison">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="EQUALS"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LogUnitType">
		<xs:sequence>
			<xs:element name="testCaseName" type="xs:string"/>
			<xs:element name="status" type="test:TestCaseRuntimeStatus"/>
			<xs:element name="startTime" type="xs:string"/>
			<xs:element name="endTime" type="xs:string"/>
			<xs:element name="message" type="xs:string" minOccurs="0"/>
			<xs:element name="parameterMappings" type="test:ParameterMappingsType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="TestCaseRuntimeStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="NOT_STARTED"/>
			<xs:enumeration value="RUNNING"/>
			<xs:enumeration value="SUCCESSED"/>
			<xs:enumeration value="FAILED"/>
			<xs:enumeration value="POST_CONDITION_FAILED"/>
			<xs:enumeration value="PRE_CONDITION_FAILED"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TestTaskRuntimeStatus">
		<xs:restriction base="xs:string">
			<xs:enumeration value="FAILED"/>
			<xs:enumeration value="SUCCESSED"/>
			<xs:enumeration value="RUNNING"/>
			<xs:enumeration value="NOT_STARTED"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="TestLogType">
		<xs:sequence>
			<xs:element name="logName" type="xs:string"/>
			<xs:element name="description" type="xs:string" minOccurs="0"/>
			<xs:element name="taskName" type="xs:string"/>
			<xs:element name="status" type="test:TestTaskRuntimeStatus"/>
			<xs:element name="startTime" type="xs:string"/>
			<xs:element name="endTime" type="xs:string"/>
			<xs:element name="logUnit" type="test:LogUnitType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="DeclareType">
		<xs:sequence minOccurs="0" maxOccurs="unbounded">
			<xs:element name="variable" type="test:VariableType"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MethodDefinitionType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="parameter" type="test:MethodParameterType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="returnType" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="MethodParameterType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="dataType" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ClassDefinitionType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="fieldDefinition" type="test:FieldDefinitionType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="methodDefinition" type="test:MethodDefinitionType" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element name="constructType" minOccurs="0">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="COMMON"/>
						<xs:enumeration value="STATIC"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="constructorDefinition" type="test:ConstructorType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ConstructorType">
		<xs:sequence>
			<xs:element name="constructorMethod" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="FieldDefinitionType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="type" type="xs:string"/>
			<xs:element name="accessMethod" type="test:AccessMethodType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="AccessMethodType">
		<xs:sequence>
			<xs:element name="inputMethod" type="xs:string" minOccurs="0"/>
			<xs:element name="outputMethod" type="xs:string" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ScriptsType">
		<xs:sequence>
			<xs:element name="script" type="test:ScriptType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="scripts" type="test:ScriptsType"/>
	<xs:element name="classDefinitions" type="test:ClassDefinitionsType"/>
	<xs:complexType name="ClassDefinitionsType">
		<xs:sequence>
			<xs:element name="classDefinition" type="test:ClassDefinitionType" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="testcase" type="test:TestCaseType"/>
	<xs:complexType name="DataPoolDefinitionType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="poolType">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="LIST"/>
						<xs:enumeration value="SQL"/>
						<xs:enumeration value="SEQUENCE"/>
						<xs:enumeration value="COMPLEX"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="dataType" type="xs:string"/>
			<xs:element name="accessMethod">
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="RANDOM"/>
						<xs:enumeration value="MANDATE"/>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="rule" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="dataPoolDefinitions" type="test:DataPoolDefintionsType"/>
	<xs:complexType name="DataPoolDefintionsType">
		<xs:sequence>
			<xs:element name="dataPoolDefinition" type="test:DataPoolDefinitionType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ParameterMappingType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="dataType" type="xs:string"/>
			<xs:element name="value" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ParameterMappingsType">
		<xs:sequence>
			<xs:element name="parameterMapping" type="test:ParameterMappingType" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="testTaskRunTime" type="test:TestTaskRuntimeDescriptionType"/>
	<xs:complexType name="PackageMappingType">
		<xs:sequence>
			<xs:element name="simpleName" type="xs:string"/>
			<xs:element name="fullName" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PersonType">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="picture" type="xs:base64Binary"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="person" type="test:PersonType"/>
	<xs:complexType name="robotFunction">
		<xs:sequence>
			<xs:element name="name" type="xs:string"/>
			<xs:element name="parameter" type="xs:string"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="robotType">
		<xs:sequence>
			<xs:element name="robotUnit" type="test:robotFunction" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	
</xs:schema>
